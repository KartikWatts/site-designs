{"version":3,"sources":["components/Songs.js","util.js","components/Players.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Songs","currentSong","className","alt","name","src","cover","artist","playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","Players","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","dirxn","currentIndex","findIndex","length","currentTime","min","max","duration","value","onChange","e","target","type","size","icon","faAngleLeft","onClick","pause","faPause","faPlay","faAngleRight","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","color","uuidv4","App","useRef","useState","timeUpdateHandler","skipHandler","a","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2064106.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Songs({ currentSong }) {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","export const playAudio = (isPlaying, audioRef) => {\r\n  if (isPlaying) {\r\n    const playPromise = audioRef.current.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise.then((audio) => {\r\n        audioRef.current.play();\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleRight,\r\n  faAngleLeft,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { playAudio } from \"../util\";\r\n\r\nfunction Players({\r\n  audioRef,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n  //Handler\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  //Handler\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const skipTrackHandler = (dirxn) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (dirxn === \"skip-forward\") {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (dirxn === \"skip-backward\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        playAudio(isPlaying, audioRef);\r\n        return;\r\n      }\r\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-container\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          onChange={dragHandler}\r\n          type=\"range\"\r\n        />\r\n\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          className=\"skip=backward\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n          onClick={() => skipTrackHandler(\"skip-backward\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n","import React from \"react\";\r\nimport { playAudio } from \"../util\";\r\n\r\nfunction LibrarySong({\r\n  song,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  songs,\r\n  id,\r\n}) {\r\n  const setCurrentHandler = () => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    setCurrentSong(song);\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  return (\r\n    <div\r\n      onClick={setCurrentHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nfunction Library({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  song,\r\n  libraryStatus,\r\n}) {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            key={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n            songs={songs}\r\n            id={song.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Nav({ libraryStatus, setLibraryStatus }) {\r\n  return (\r\n    <nav>\r\n      <h2>Waves</h2>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n\treturn [\r\n\t\t{\r\n\t\t\tname: \"Sugarless\",\r\n\t\t\tcover:\r\n\t\t\t\t\"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n\t\t\tartist: \"The Field Tapes, Aviino\",\r\n\t\t\taudio: \"https://mp3.chillhop.com/serve.php/?mp3=7814\",\r\n\t\t\tcolor: [\"#DBE8DF\", \"#837D6A\"],\r\n\t\t\tid: uuidv4(),\r\n\t\t\tactive: true,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: \"Going Back\",\r\n\t\t\tcover:\r\n\t\t\t\t\"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n\t\t\tartist: \"Swørn\",\r\n\t\t\taudio: \"https://mp3.chillhop.com/serve.php/?mp3=10320\",\r\n\t\t\tcolor: [\"#CDB4C7\", \"#133768\"],\r\n\t\t\tid: uuidv4(),\r\n\t\t\tactive: false,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: \"Maple Leaf Pt.2\",\r\n\t\t\tcover:\r\n\t\t\t\t\"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n\t\t\tartist: \"Philanthrope\",\r\n\t\t\taudio: \"https://mp3.chillhop.com/serve.php/?mp3=8607\",\r\n\t\t\tcolor: [\"#B36957\", \"#772F28\"],\r\n\t\t\tid: uuidv4(),\r\n\t\t\tactive: false,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: \"Snowstalgia\",\r\n\t\t\tcover:\r\n\t\t\t\t\"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n\t\t\tartist: \"invention_\",\r\n\t\t\taudio: \"https://mp3.chillhop.com/serve.php/?mp3=7811\",\r\n\t\t\tcolor: [\"#C7AFC7\", \"#8A1B22\"],\r\n\t\t\tid: uuidv4(),\r\n\t\t\tactive: false,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: \"Sleepover\",\r\n\t\t\tcover:\r\n\t\t\t\t\"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n\t\t\tartist: \"Nymano, JK the Sage\",\r\n\t\t\taudio: \"https://mp3.chillhop.com/serve.php/?mp3=10130\",\r\n\t\t\tcolor: [\"#CDB4C7\", \"#133768\"],\r\n\t\t\tid: uuidv4(),\r\n\t\t\tactive: false,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: \"Vibe Vibe\",\r\n\t\t\tcover:\r\n\t\t\t\t\"https://chillhop.com/wp-content/uploads/2020/07/4b9345777ac06217801ed6b44c66800829e122c3-1024x1024.jpg\",\r\n\t\t\tartist: \"Moods, Yasper\",\r\n\t\t\taudio: \"https://mp3.chillhop.com/serve.php/?mp3=10000\",\r\n\t\t\tcolor: [\"#C7AFC7\", \"#8A1B22\"],\r\n\t\t\tid: uuidv4(),\r\n\t\t\tactive: false,\r\n\t\t},\r\n\t];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n//importing styles\nimport \"./styles/app.scss\";\n//importing components\nimport Songs from \"./components/Songs\";\nimport Players from \"./components/Players\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//importing util\nimport chillHop from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(chillHop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n  const skipHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Songs currentSong={currentSong} />\n      <Players\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={skipHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}